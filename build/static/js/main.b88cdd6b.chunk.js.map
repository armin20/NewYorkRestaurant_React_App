{"version":3,"sources":["Components/About.js","Components/Restaurant.js","Components/Restaurants.js","Components/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["About","Card","style","backgroundColor","Body","Title","Text","className","Button","href","Restaurant","id","useParams","useState","restaurant","setRestaurant","loading","setLoading","useEffect","ApiUrl","fetch","then","data","json","result","hasOwnProperty","Header","Spinner","animation","role","coord","address","name","building","street","MapContainer","height","center","zoom","scrollWheelZoom","TileLayer","url","Marker","position","CardDeck","grades","map","index","grade","Date","date","toLocaleDateString","inverse","Subtitle","Restaurants","restaurants","setRestaurants","page","setPage","history","useHistory","location","useLocation","query","queryString","parse","search","borough","undefined","res","length","Table","striped","bordered","hover","variant","onClick","push","_id","cuisine","Pagination","Prev","Item","Next","NotFound","App","searchString","setSearchString","Navbar","bg","expand","to","Brand","Toggle","Collapse","Nav","Link","Form","onSubmit","e","preventDefault","inline","FormControl","type","placeholder","value","onChange","target","Container","Row","Col","md","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b88cdd6b.chunk.js","sourcesContent":["import { Card, Button } from \"react-bootstrap\";\r\nfunction About() {\r\n  return (\r\n    <Card style={{ backgroundColor: \"#F5F5F5\" }}>\r\n      <Card.Body>\r\n        <Card.Title>About</Card.Title>\r\n        <Card.Text className=\"font-weight-bold\">Hi, I am Armin. :)</Card.Text>\r\n        <Card.Text className=\"font-weight-medium\">\r\n          I am currently learning Front-end and Back-end Development. I have a\r\n          couple of project with JS.\r\n        </Card.Text>\r\n        <br />\r\n        <Button href=\"https://github.com/armin20\">Github</Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import { MapContainer, TileLayer, Marker } from \"react-leaflet\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Card, CardDeck, Spinner } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction Restaurant() {\r\n  let { id } = useParams();\r\n  const [restaurant, setRestaurant] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    let ApiUrl = `https://hidden-gorge-64232.herokuapp.com/api/restaurants/${id}`;\r\n\r\n    fetch(ApiUrl)\r\n      .then((data) => data.json())\r\n      .then((result) => {\r\n        setLoading(false);\r\n\r\n        if (result.hasOwnProperty(\"_id\")) {\r\n          //hasOwnProperty checks if the object that we have like in here result from fetching the api has the property of id,\r\n          //then it goes ot next line. Otherwise, it sets the setRestaurant(null)\r\n\r\n          setRestaurant(result);\r\n        } else {\r\n          setRestaurant(null);\r\n        }\r\n      });\r\n  }, [id]);\r\n\r\n  if (loading === true) {\r\n    return (\r\n      <Card>\r\n        <Card.Header>Restaurant List</Card.Header>\r\n        <Card.Body>Loading Restaurants...</Card.Body>\r\n        <Spinner animation=\"border\" role=\"status\" />{\" \"}\r\n        {/*spinner that shows a loading circle. It first shows it, then when the data is rendered successfully, and loading is set to false, then it will be disappeared.  */}\r\n      </Card>\r\n    );\r\n  } else {\r\n    if (restaurant) {\r\n      const { coord } = restaurant.address;\r\n\r\n      return (\r\n        <>\r\n          <Card style={{ backgroundColor: \"#F5F5F5\" }}>\r\n            <Card.Body>\r\n              <Card.Title>{restaurant.name}</Card.Title>\r\n              <Card.Text>\r\n                {restaurant.address.building} {restaurant.address.street}\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n          <br />\r\n          <MapContainer\r\n            style={{ height: \"400px\" }}\r\n            center={[coord[1], coord[0]]}\r\n            zoom={13}\r\n            scrollWheelZoom={false}\r\n          >\r\n            <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n            <Marker position={[coord[1], coord[0]]}></Marker>\r\n          </MapContainer>\r\n\r\n          <h4>Ratings</h4>\r\n          <br />\r\n          <CardDeck>\r\n            {restaurant.grades.map((result, index) => (\r\n              <Card key={index}>\r\n                <Card.Header>Grades: {result.grade}</Card.Header>\r\n                <Card.Body>\r\n                  Completed: {new Date(result.date).toLocaleDateString()}\r\n                </Card.Body>\r\n              </Card>\r\n            ))}\r\n          </CardDeck>\r\n          <br />\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <Card inverse style={{ backgroundColor: \"#F5F5F5\" }}>\r\n            <Card.Body>\r\n              <Card.Subtitle className=\"mb-2 text-muted\">\r\n                Unable to find Restaurant with id: {id}\r\n              </Card.Subtitle>\r\n            </Card.Body>\r\n          </Card>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default Restaurant;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nimport { Card, Table, Pagination } from \"react-bootstrap\";\r\n\r\nfunction Restaurants() {\r\n  const [restaurants, setRestaurants] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const perPage = 10;\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n\r\n  useEffect(() => {\r\n    let ApiUrl = `https://hidden-gorge-64232.herokuapp.com/api/restaurants?page=${page}&perPage=${perPage}`;\r\n    let query = queryString.parse(location.search).borough;\r\n\r\n    if (query !== undefined) {\r\n      ApiUrl += `&borough=${query}`;\r\n    }\r\n\r\n    fetch(ApiUrl)\r\n      .then((res) => res.json())\r\n      .then((restaurants) => {\r\n        setRestaurants(restaurants);\r\n      });\r\n  }, [page, location]);\r\n\r\n  const previousPage = () => {\r\n    if (page > 1) {\r\n      setPage(page - 1);\r\n    }\r\n  };\r\n  const nextPage = () => {\r\n    setPage(page + 1);\r\n  };\r\n\r\n  if (restaurants.length > 0 && restaurants !== null) {\r\n    return (\r\n      <>\r\n        <Card style={{ backgroundColor: \"#E8EEF2\" }}>\r\n          <Card.Body>\r\n            <Card.Title>Restaurant List</Card.Title>\r\n            <Card.Text>\r\n              Full list of restaurants, Optionally sorted by borough\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n        <br />\r\n        <Table striped bordered hover variant=\"dark\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Address</th>\r\n              <th>Borough</th>\r\n              <th>Cuisine</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {restaurants.map((restaurant) => (\r\n              <tr\r\n                key={restaurant._id}\r\n                onClick={() => {\r\n                  history.push(`/Restaurant/${restaurant._id}`);\r\n                }}\r\n              >\r\n                <td>{restaurant.name}</td>\r\n                <td>\r\n                  {restaurant.address.building} {restaurant.address.street}\r\n                </td>\r\n                <td>{restaurant.borough}</td>\r\n                <td>{restaurant.cuisine}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n        <Pagination>\r\n          <Pagination.Prev onClick={previousPage}></Pagination.Prev>\r\n          <Pagination.Item>{page}</Pagination.Item>\r\n          <Pagination.Next onClick={nextPage}></Pagination.Next>\r\n        </Pagination>\r\n      </>\r\n    );\r\n  } else if (restaurants === null) {\r\n    return (\r\n      <Card>\r\n        <Card.Header>Restaurant List</Card.Header>\r\n        <Card.Body>Loading Restaurants...</Card.Body>\r\n      </Card>\r\n    );\r\n  } else {\r\n    return (\r\n      <Card>\r\n        <Card.Header>Restaurant List</Card.Header>\r\n        <Card.Body>No Restaurants Found</Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Restaurants;\r\n","function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1>Not Found</h1>\r\n      <p>We can't find what you're looking for...</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import \"./App.css\";\nimport {\n  Button,\n  Col,\n  Container,\n  Form,\n  FormControl,\n  Nav,\n  Navbar,\n  Row,\n} from \"react-bootstrap\";\nimport { Redirect, Route, Switch, useHistory } from \"react-router-dom\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useState } from \"react\";\nimport About from \"./Components/About\";\nimport Restaurant from \"./Components/Restaurant\";\nimport Restaurants from \"./Components/Restaurants\";\nimport NotFound from \"./Components/NotFound\";\n\nimport { BiSearch } from \"react-icons/bi\"; /*these two lines below are added for search and restaurant icons, they also added to dependencies. */\nimport { MdRestaurant } from \"react-icons/md\";\n\nfunction App() {\n  let [searchString, setSearchString] = useState(\"\");\n  let history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    history.push(`/restaurants?borough=${searchString}`);\n\n    setSearchString(\"\");\n  };\n  return (\n    <>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n        <LinkContainer to=\"/\">\n          <Navbar.Brand>\n            <MdRestaurant /> New York Restaurants\n          </Navbar.Brand>\n        </LinkContainer>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <LinkContainer to=\"/restaurants\">\n              <Nav.Link>Full List</Nav.Link>\n            </LinkContainer>\n            <LinkContainer to=\"/about\">\n              <Nav.Link>About</Nav.Link>\n            </LinkContainer>\n          </Nav>\n          <Form onSubmit={handleSubmit} inline>\n            <FormControl\n              type=\"text\"\n              placeholder=\"Borough\"\n              className=\"mr-sm-2\"\n              value={searchString}\n              onChange={(e) => setSearchString(e.target.value)}\n            />\n            <Button type=\"submit\" variant=\"outline-success\">\n              <BiSearch />\n              Search\n            </Button>\n          </Form>\n        </Navbar.Collapse>\n      </Navbar>\n      <br />\n\n      <Container>\n        <Row>\n          <Col md={12}>\n            <Switch>\n              <Route path=\"/Restaurants\">\n                <Restaurants />\n              </Route>\n              <Route exact path=\"/Restaurant/:id\">\n                <Restaurant />\n              </Route>\n              <Route exact path=\"/about\">\n                <About />\n              </Route>\n              <Route exact path=\"/\">\n                <Redirect to=\"/Restaurants\" />\n              </Route>\n              <Route>\n                <NotFound />\n              </Route>\n            </Switch>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*********************************************************************************\n *  WEB422 – Assignment 3\n *  I declare that this assignment is my own work in accordance with Seneca Academic Policy.\n *  No part of this assignment has been copied manually or electronically from any other source\n *  (including web sites) or distributed to other students.\n *\n *  Name: Armin Sharifiyan Student ID: 130891203 Date: October 15, 2021\n *\n *\n ********************************************************************************/\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}